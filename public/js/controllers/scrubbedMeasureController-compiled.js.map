{"version":3,"sources":["scrubbedMeasureController.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,QAAQ,MAAR,CAAe,UAAf,CAAV;AACA,IAAI,UAAJ,CAAe,2BAAf,EAA2C,CAAC,QAAD,EAAW,gBAAX,EAA4B,SAA5B,EACvC,UAAS,MAAT,EAAiB,cAAjB,EAAiC,OAAjC,EAAyC;;AAErC,aAAS,QAAT,GAAmB;AACf,gBAAQ,GAAR,CAAY,SAAZ,EAAuB,eAAvB,EAAwC,4BAAxC;AACA,gBAAQ,GAAR,CAAY,eAAZ;AACH;;AAED,WAAO,WAAP,GAAqB;AACjB,sBAAc,IADG;AAEjB,0BAAkB;AAFD,KAArB;;AAKA,WAAO,iBAAP,GAA2B,EAA3B;;AAEA,WAAO,gBAAP,GAA0B,UAAS,IAAT,EAAc;AACpC,eAAO,iBAAP,GAA2B,IAA3B;AACA,gBAAQ,GAAR,CAAY,IAAZ;AACH,KAHD;;AAKA,aAAS,WAAT,GAAsB;AAClB,uBAAe,gCAAf,EACK,KADL,GAEK,KAFL,CAEW,UAAS,IAAT,EAAc;AACd,mBAAO,WAAP,CAAmB,gBAAnB,GAAsC,IAAtC;AACC,mBAAO,iBAAP,GAA2B,OAAO,WAAP,CAAmB,YAA9C;AACH,SALT,EAMQ,UAAS,GAAT,EAAc;AACV,oBAAQ,GAAR,CAAY,sBAAZ,EAAoC,GAApC;AACH,SART;AAUH;;AAED,WAAO,MAAP,GAAgB,EAAhB;;AAEA,WAAO,6BAAP,GAAuC,YAAW;AAC9C,gBAAQ,GAAR,CAAY,OAAO,iBAAnB;AACA,uBAAe,sCAAf,EACK,KADL,GAEK,MAFL,CAEY,WAFZ,EAEwB,OAAO,iBAF/B,EAGC,KAHD,CAGO,UAAS,IAAT,EAAc;AACb,mBAAO,MAAP,GAAgB,IAAhB;AACP,SALD,EAMK,UAAS,GAAT,EAAc;AACV,oBAAQ,GAAR,CAAY,sBAAZ,EAAoC,GAApC;AACH,SARN;AAUH,KAZD;;AAcA;;AAEA,WAAO,eAAP,GAAyB,EAAzB;AACA,WAAO,aAAP,GAAuB,EAAvB;AACA,WAAO,aAAP,GAAuB,EAAvB;AACA,WAAO,YAAP,GAAsB,EAAtB;;AAEA,WAAO,aAAP,GAAuB,YAAU;AAC7B,eAAO,eAAP,GAAyB,OAAO,YAAP,CAAoB,CAApB,EAAuB,WAAhD;AACA,eAAO,aAAP,GAAuB,OAAO,YAAP,CAAoB,CAApB,EAAuB,KAA9C;AACH,KAHD;;AAKA,WAAO,SAAP,GAAmB;AACf,cAAM,QADS;AAEf,uBAAe,OAAO,YAFP;AAGf,qBAAa,KAHE;AAIf,oBAAY,CACR;AACI,mBAAM,aADV;AAEI,yBAAY;AAFhB,SADQ,EAKR;AACI,mBAAM,OADV;AAEI,yBAAY;AAFhB,SALQ;AAJG,KAAnB;;AAgBA,WAAO,YAAP,GAAsB,YAAU;AAC5B,YAAI,QAAQ,OAAO,MAAP,CAAc,SAAd,CAAwB;AAAA,mBAAK,EAAE,WAAF,IAAe,OAAO,eAA3B;AAAA,SAAxB,CAAZ;AACA,eAAO,MAAP,CAAc,KAAd,EAAqB,KAArB,GAA6B,OAAO,aAApC;;AAEA,YAAI,UAAU,eAAe,uCAAf,EAAwD,EAAxD,EAA2D,EAA3D,EAA8D,EAAC,UAAW,IAAZ,EAA9D,CAAd;;AAEK,gBAAQ,KAAR,GAAgB,MAAhB,CAAuB,IAAvB,EAA4B,OAAO,MAAP,CAAc,KAAd,EAAqB,EAAjD,EACA,KADA,CACM,UAAS,MAAT,EAAgB;AACnB,oBAAQ,GAAR,CAAY,qBAAZ;AACA,oBAAQ,GAAR,CAAY,OAAO,aAAnB;AACA,mBAAO,CAAP,EAAU,KAAV,GAAkB,OAAO,aAAzB;AACA,mBAAO,CAAP,EAAU,aAAV,GAA0B,OAAO,aAAjC;AACA,mBAAO,CAAP,EAAU,OAAV;AACA;AACH,SARA,EAQC,YAAU;AACR,oBAAQ,GAAR,CAAY,iCAAZ;AACH,SAVA;AAWR,KAjBD;AAkBH,CA/FsC,CAA3C","file":"scrubbedMeasureController-compiled.js","sourcesContent":["var app = angular.module('inspinia');\napp.controller('scrubbedMeasureController',['$scope', '$odataresource','toaster',\n    function($scope, $odataresource, toaster){\n\n        function popAlert(){\n            toaster.pop('success', \"Changes Saved\", \"Your edits have been saved\");\n            console.log('popping alert');\n        }\n\n        $scope.accountList = {\n            repeatSelect: null,\n            availableOptions: []\n        };\n\n        $scope.selectedAccountID = \"\";\n\n        $scope.showSelectedItem = function(item){\n            $scope.selectedAccountID = item;\n            console.log(item);\n        };\n\n        function getAccounts(){\n            $odataresource(\"http://windows-10:8888/Account\")\n                .odata()\n                .query(function(data){\n                       $scope.accountList.availableOptions = data;\n                        $scope.selectedAccountID = $scope.accountList.repeatSelect;\n                    },\n                    function(err) {\n                        console.log('There was an error: ', err);\n                    }\n                )\n        }\n\n        $scope.ngData = [];\n\n        $scope.getMeasuresForSelectedAccount = function() {\n            console.log($scope.selectedAccountID);\n            $odataresource(\"http://windows-10:8888/ChangeMeasure\")\n                .odata()\n                .filter('AccountID',$scope.selectedAccountID)\n            .query(function(data){\n                    $scope.ngData = data;\n            },\n                 function(err) {\n                     console.log('There was an error: ', err);\n                 }\n            )\n        };\n\n        getAccounts();\n\n        $scope.selectedMeasure = \"\";\n        $scope.selectedValue = \"\";\n        $scope.justification = \"\";\n        $scope.mySelections = [];\n\n        $scope.showSelection = function(){\n            $scope.selectedMeasure = $scope.mySelections[0].MeasureName;\n            $scope.selectedValue = $scope.mySelections[0].Value;\n        };\n\n        $scope.ngOptions = {\n            data: 'ngData',\n            selectedItems: $scope.mySelections,\n            multiSelect: false,\n            columnDefs: [\n                {\n                    field:'MeasureName',\n                    displayName:'Measure'\n                },\n                {\n                    field:'Value',\n                    displayName:'Value'\n                }\n            ]\n        };\n\n        $scope.updateRecord = function(){\n            var index = $scope.ngData.findIndex(x => x.MeasureName==$scope.selectedMeasure);\n            $scope.ngData[index].Value = $scope.selectedValue;\n\n            var measure = $odataresource(\"http://windows-10:8888/ChangeMeasure/\", {},{},{odatakey : 'ID'});\n\n                 measure.odata().filter(\"ID\",$scope.ngData[index].ID)\n                .query(function(result){\n                    console.log(\"Everything went ok!\");\n                    console.log($scope.selectedValue);\n                    result[0].Value = $scope.selectedValue;\n                    result[0].Justification = $scope.justification;\n                    result[0].$update();\n                    popAlert();\n                },function(){\n                    console.log(\"Oops, something wrong happened!\")\n                });\n        };\n    }]);"]}